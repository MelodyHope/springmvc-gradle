<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd 
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
    
    <!-- bean definitions here -->
    <!-- 可以在这里把自动扫包删掉，改成JavaConfig的@ComponentScan -->
   <context:component-scan base-package="com.tch">
        <!-- 这个地方扫包的时候把@Controller排除掉，因为如果在Controller中使用了@Value注入其他的properties属性（非此文件声明的properties文件），
                这里扫进去了会导致生成controller的bean时注入的properties找不到报错 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
   </context:component-scan>
    
    <!-- 此行语句使得resource autowired 等四个注解可以使用 -->
    <context:annotation-config/>
    
    <!-- 配置读取外部配置文件，这里配置的properties无法注入@Controller -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
   <!--  <bean id="prop" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <array>
                <value>/WEB-INF/conf/outprop2.properties</value>
            </array>
        </property>
    </bean> -->
    
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"-->
        <!--destroy-method="close"-->
        <!--p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"-->
        <!--p:username="${jdbc.username}" p:password="${jdbc.password}" />-->
     
     <!-- 实例化jdbcTemplate,同时注入数据源 -->  
    <!--<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"-->
        <!--p:dataSource-ref="dataSource"/>-->
        
    <!-- 配置事务管理器 -->
    <!--<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->
    
    <!-- 事务扫描开始(开启@Tranctional) -->
    <!--<tx:annotation-driven transaction-manager="txManager"/>-->
    
    <!-- 引用JavaConfig -->
    <!-- <bean class="com.tch.config.TestConfig"/> -->
    
    <!-- 引用其他资源文件 -->
    <!-- <import resource="other-config.xml"/> -->

</beans>